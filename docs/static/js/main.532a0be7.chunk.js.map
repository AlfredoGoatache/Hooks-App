{"version":3,"sources":["components/08-useReducer/todoReducer.tsx","components/08-useReducer/TodoApp.tsx","hooks/useForm.tsx","index.tsx"],"names":["todoReducer","state","action","type","payload","init","todos","localStorage","getItem","JSON","parse","TodoApp","useReducer","dispatch","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","useEffect","setItem","stringify","className","length","map","todo","i","desc","id","onSubmit","e","preventDefault","trim","newTodo","Date","getTime","done","placeholder","autoComplete","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAYMA,EAAc,SAAEC,EAAWC,GAE7B,OAASA,EAAOC,MACZ,IAAK,MACD,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,UAG7B,QACI,OAAOH,I,OCTbI,EAAO,WAET,IAAIC,EAAaC,aAAaC,QAAQ,SAEtC,OAAOC,KAAKC,MAAOJ,IAAW,IAG5BK,EAAS,WAEX,MAA4BC,qBAAWZ,EAAa,GAAKK,GAAzD,mBAAQC,EAAR,KAAeO,EAAf,KAEA,ECpBY,WAAwB,IAAvBC,EAAsB,uDAAP,GAE5B,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KAcA,MAAM,CAAED,EARsB,SAAC,GAAkB,IAAjBE,EAAgB,EAAhBA,OACxBD,EAAU,2BACPD,GADM,kBAERE,EAAOC,KAAOD,EAAOE,UAPhB,WACVH,EAAUH,KDe0CO,CAAQ,CAC5DC,YAAY,KADhB,mBAASA,EAAT,KAASA,YAAcC,EAAvB,KAA0CC,EAA1C,KAIAC,qBAAW,WACPlB,aAAamB,QAAQ,QAASjB,KAAKkB,UAAWrB,MAC/C,CAACA,IA2BJ,OACI,gCACI,qBAAIsB,UAAU,cAAd,sBAAuCtB,EAAMuB,OAA7C,OACA,uBAEA,sBAAKD,UAAU,MAAf,UAEI,qBAAKA,UAAU,QAAf,SAEI,oBAAIA,UAAU,8BAAd,SAEItB,EAAMwB,KAAK,SAACC,EAAYC,GAAb,OACP,+BAGI,oBAAGJ,UAAU,YAAb,UAA0BI,EAAI,EAA9B,IAAkCD,EAAKE,QACvC,wBAAQL,UAAU,iBAAlB,oBACA,yBAJCG,EAAKG,WAYtB,sBAAKN,UAAU,QAAf,UAEI,+CACA,uBACA,uBAAMO,SArDD,SAACC,GAGlB,GAFAA,EAAEC,mBAEEf,EAAYgB,OAAOT,QAAU,GAAjC,CAIA,IAAMU,EAAU,CACZL,IAAI,IAAIM,MAAOC,UACfR,KAAMX,EACNoB,MAAM,GAQV7B,EALe,CACXV,KAAM,MACNC,QAASmC,IAIbf,MAkCY,UACI,uBACIrB,KAAK,OACLgB,KAAK,cACLS,UAAU,eACVe,YAAY,qBACZC,aAAa,MACbxB,MAAOE,EACPuB,SAAUtB,IAEd,wBACIpB,KAAK,SACLyB,UAAU,yCAFd,kC,ME3ExBkB,IAASC,OACL,eAAC,IAAMC,WAAP,WACA,uBACE,cAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.532a0be7.chunk.js","sourcesContent":["interface Todos {\n    id: number;\n    desc: {};\n    done: boolean;\n}\n\ninterface Action {\n    type: string;\n    payload: Todos;\n  }\n\n\nconst todoReducer = ( state:any, action:Action ) => {\n\n    switch ( action.type ) {\n        case 'add':\n            return [...state, action.payload];\n            \n    \n        default:\n            return state;\n    }\n\n\n\n\n};\n\nexport{\n    todoReducer\n}","import { useReducer, useEffect } from 'react';\nimport { useForm } from \"../../hooks/useForm\";\nimport { todoReducer } from \"./todoReducer\"\n\ninterface Todos {\n    id: number;\n    desc: string;\n    done: boolean;\n}\n\n\nconst init = () => {\n\n    let todos: any = localStorage.getItem('todos');\n\n    return JSON.parse( todos ) || [];\n}\n\nconst TodoApp =()=> {\n\n    const [ todos, dispatch ] = useReducer(todoReducer, [] , init);\n\n    const [ {description}, handleInputChange, reset]: any = useForm({\n        description:''\n    });\n\n    useEffect( ()=>{\n        localStorage.setItem('todos', JSON.stringify( todos ) )\n    }, [todos]);\n\n\n    const handleSubmit = (e:any) => {\n        e.preventDefault();\n\n        if( description.trim().length <= 1 ) {\n            return;\n        }\n\n        const newTodo = {\n            id: new Date().getTime(),\n            desc: description,\n            done: false\n        };\n\n        const action = {\n            type: 'add',\n            payload: newTodo\n        }\n\n        dispatch( action );\n        reset();\n\n    }\n\n\n    return(\n        <div>\n            <h1 className='text-center'>Todo App({ todos.length })</h1>\n            <hr />\n\n            <div className='row'>\n\n                <div className='col-7'>\n\n                    <ul className='list-gruop list-group-flush'>\n                    {\n                        todos.map( (todo:Todos, i:any) => (\n                            <li\n                            key={todo.id}\n                            >\n                                <p className='text-left'>{i + 1}.{todo.desc}</p>\n                                <button className='btn btn-danger'>Borrar</button>\n                                <hr />\n                            </li>\n                        ))\n                    }\n                    </ul>\n\n                </div>\n\n                <div className='col-5'>\n\n                    <h4>Agregar TODOS</h4>\n                    <hr />\n                    <form onSubmit= { handleSubmit } >\n                        <input \n                            type='text' \n                            name='description'\n                            className='form-control'\n                            placeholder='Agregar tareas ...'\n                            autoComplete='off'\n                            value={description} \n                            onChange={handleInputChange}\n                        />\n                        <button\n                            type='submit'\n                            className='btn btn-outline-primary btn-block mt-1'\n                        >\n                            Agregar\n                        </button>\n                    </form>\n\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport{\n    TodoApp\n}","import { useState } from 'react';\n\nconst useForm = (initialState = {} ) =>{\n\n    const [values, setValues] = useState(initialState)\n\n    const reset = () => {\n        setValues(initialState);\n    }\n\n        const handleInputChange = ({target}:any) => {\n            setValues({\n            ...values,\n            [target.name]: target.value\n            });\n\n        };\n\n    return[ values, \n        handleInputChange,\n        reset ];\n};\n\nexport{\n    useForm\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import { FormWithCustomHook } from './components/02-useEffect/FormWithCustomHook';\n// import { MultipleCustomHooks } from './components/03-examples/MultipleCustomHooks';\n// import { CounterApp } from './components/01-useState/CounterApp';\n// import { CounterWithCustomHook } from './components/01-useState/CounterWithCustomHook';\n// import { SimpleForm } from './components/02-useEffect/SimpleForm';\n// import { HookApp } from './HookApp';\n// import { FocusScreen } from './components/04-useRef/FocusScreen';\n// import { RealExampleRef } from './components/04-useRef/RealExampleRef';\n// import { Layout } from './components/05-useLayoutEffect/LayoutEffect';\n// import { Memorize } from './components/06-memos/Memorize';\n// import { MemoHook } from './components/06-memos/MemoHook';\n// import { CallbackHook } from './components/06-memos/CallbackHook';\n// import { Padre } from './components/07-tarea-memo/Padre';\nimport { TodoApp } from './components/08-useReducer/TodoApp';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n    <br/>\n      <TodoApp/>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}